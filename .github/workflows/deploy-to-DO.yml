name: Deploy to DigitalOcean Droplet

on:
  schedule:
    - cron: '0 12 * * *'
  workflow_dispatch:

env:
  POSTGRES_HOST: ${{ vars.POSTGRES_HOST }}
  POSTGRES_PORT: ${{ vars.POSTGRES_PORT }}
  POSTGRES_DB: ${{ vars.POSTGRES_DB }}
  POSTGRES_USER: ${{ vars.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  MASTER_SECRET: ${{ secrets.MASTER_SECRET }}
  MICROSERVICE_URL: ${{ vars.MICROSERVICE_URL }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: npm run installs
      
    - name: Build apps
      run: npm run builds

    - name: Build Docker image
      run: docker-compose build

    - name: Save Docker image as tar file
      run: docker save mockazon:latest > image.tar

    - name: Copy Docker image to the remote host
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DROPLET_IP }}
        username: root
        password: ${{ secrets.SSH_PASSWORD }}
        source: "image.tar"
        target: "/remote/directory/path"

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Load and run Docker image on the remote host
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DROPLET_IP }}
        username: root
        password: ${{ secrets.SSH_PASSWORD }}
        script: |
          cd /remote/directory/path
          docker load < image.tar
          docker-compose up -d
