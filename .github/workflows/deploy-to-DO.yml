name: Deploy to DigitalOcean Droplet

on:
  schedule:
    - cron: '0 12 * * *'
  workflow_dispatch:

env:
  POSTGRES_HOST: ${{ vars.POSTGRES_HOST }}
  POSTGRES_PORT: ${{ vars.POSTGRES_PORT }}
  POSTGRES_DB: ${{ vars.POSTGRES_DB }}
  POSTGRES_USER: ${{ vars.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  MASTER_SECRET: ${{ secrets.MASTER_SECRET }}
  MICROSERVICE_URL: ${{ vars.MICROSERVICE_URL }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .env file
      run: |
        echo POSTGRES_HOST=${{ vars.POSTGRES_HOST }} >> .env
        echo POSTGRES_PORT=${{ vars.POSTGRES_PORT }} >> .env
        echo POSTGRES_DB=${{ vars.POSTGRES_DB }} >> .env
        echo POSTGRES_USER=${{ vars.POSTGRES_USER }} >> .env
        echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
        echo MASTER_SECRET=${{ secrets.MASTER_SECRET }} >> .env
        echo MICROSERVICE_URL=${{ vars.MICROSERVICE_URL }} >> .env
      
    - name: Login to DockerHub
      run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: Install dependencies
      run: npm run installs
      
    - name: Build apps
      run: npm run builds

    - name: Build and push Docker image
      run: |
        docker-compose build
        docker-compose push

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: List files in current directory
      run: ls -l
    - name: Copy docker-compose.yml to the remote host
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DROPLET_IP }}
        username: root
        password: ${{ secrets.SSH_PASSWORD }}
        port: 22
        source: "docker-compose-production.yml"
        target: "/root"

    - name: Pull and run Docker image on the remote host
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DROPLET_IP }}
        username: root
        password: ${{ secrets.SSH_PASSWORD }}
        script: |
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker-compose -f /root/docker-compose-production.yml pull
          docker-compose -f /root/docker-compose-production.yml down
          docker-compose -f /root/docker-compose-production.yml up -d
