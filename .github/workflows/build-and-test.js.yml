name: Mockazon CI

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  POSTGRES_HOST: localhost
  POSTGRES_DB: ${{ vars.POSTGRES_DB }}
  POSTGRES_USER: ${{ vars.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  MASTER_SECRET: ${{ secrets.MASTER_SECRET }}
  STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
  NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ vars.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      # Lints and FE & BE tests
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm run installs
      - name: Install prettier for formatting
        run: npm install -g prettier
      - run: npm run lints
      - run: npm run docker-up
      - name: Sleep for 20 seconds
        run: sleep 20s
        shell: bash
      - run: npm run tests:silent
      - run: npm run docker-down

      # E2E tests with containerized version 
      - name: Sleep for 20 seconds
        run: sleep 20s
        shell: bash
      - name: Setup .env file
        run: |
          echo POSTGRES_HOST=${{ vars.POSTGRES_HOST }} >> .env
          echo POSTGRES_PORT=${{ vars.POSTGRES_PORT }} >> .env
          echo POSTGRES_DB=${{ vars.POSTGRES_DB }} >> .env
          echo POSTGRES_USER=${{ vars.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo MASTER_SECRET=${{ secrets.MASTER_SECRET }} >> .env
          echo MICROSERVICE_URL=${{ vars.MICROSERVICE_URL }} >> .env
          echo ENVIRONMENT=production >> .env
      - name: Spin up container
        run: npm run containerized
      - name: Sleep for 20 seconds
        run: sleep 20s
        shell: bash
      - name: Run e2e tests
        run: npm run test-e2es
