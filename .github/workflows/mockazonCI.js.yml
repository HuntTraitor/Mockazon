name: Mockazon CI

on:
  push:
    branches: ["main"]

env:
  POSTGRES_HOST: ${{ vars.POSTGRES_HOST}}
  POSTGRES_PORT: ${{ vars.POSTGRES_PORT}}
  POSTGRES_DB: ${{ vars.POSTGRES_DB }}
  POSTGRES_USER: ${{ vars.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  MASTER_SECRET: ${{ secrets.MASTER_SECRET }}

jobs:

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - run: npm run cis
      - run: npm run lints
      - run: npm run docker-up
      - name: Sleep for 20 seconds
        run: sleep 20s
        shell: bash
      - run: npm run tests
      - run: npm run docker-down

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to DigitalOcean Droplet
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.HOST }}
        run: |
          # Install the SSH key
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # Transfer the application files and Docker Compose file
          scp -r ./path/to/your/app $SSH_USER@$HOST:/path/on/droplet/app
          scp ./path/to/docker-compose.yml $SSH_USER@$HOST:/path/on/droplet/

          # Start the containers using Docker Compose
          ssh $SSH_USER@$HOST '
            cd /path/on/droplet
            docker-compose down
            docker-compose up -d
          '
