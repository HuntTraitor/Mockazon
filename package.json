{
  "name": "mockazon",
  "version": "1.0.0",
  "description": "Educational mock/clone of Amazon.com",
  "author": "Lukas Teixeira Doepcke <lteixeir@ucsc.edu>, Evan Metcalf <evmetcal@ucsc.edu>, Eesha Krishnamagaru <elkrishn@ucsc.edu>, Hunter Tratar <htratar@ucsc.edu>, Trevor Ryles <tryles@ucsc.edu>",
  "license": "none",
  "repository": "https://github.com/ekrishnamagaru/Mockazon",
  "scripts": {
    "docker": "npm run docker-auth && npm run docker-order",
    "docker-auth": "cd AuthService && docker-compose up -d",
    "docker-order": "cd OrderService && docker-compose up -d",
    "installs": "npm install && npm run install-admin && npm run install-helloworld && npm run install-shopper && npm run install-vendor-public-api && npm run install-vendor-web-app && npm run install-auth && npm run install-order && npm run install-product",
    "install-admin": "cd Admin && npm install",
    "install-auth": "cd AuthService && npm install",
    "install-order": "cd OrderService && npm install",
    "install-helloworld": "cd HelloWorld && npm install",
    "install-shopper": "cd Shopper && npm install",
    "install-product": "cd ProductService && npm install",
    "install-vendor-web-app": "cd 'Vendor/WebApp' && npm install",
    "install-vendor-public-api": "cd 'Vendor/Public API' && npm install",
    "dev": "concurrently --kill-others \"npm run admin\" \"npm run helloworld\" \"npm run shopper\" \"npm run vendor\" \"npm run auth\" \"npm run order\"",
    "admin": "cd Admin && npm run dev",
    "auth": "cd AuthService && npm run dev",
    "order": "cd OrderService && npm run dev",
    "helloworld": "cd HelloWorld && npm run dev",
    "shopper": "cd Shopper && npm run dev",
    "vendor": "cd Vendor && npm run dev",
    "lint-admin": "cd Admin && npm run lint",
    "lint-auth": "cd AuthService && npm run lint",
    "lint-order": "cd OrderService && npm run lint",
    "lint-helloworld": "cd HelloWorld && npm run lint",
    "lint-shopper": "cd Shopper && npm run lint",
    "lint-vendor": "cd \"Vendor/Public API\" && npm run lint & cd \"Vendor/Web App\" && npm run lint",
    "lint": "npm run lint-admin & npm run lint-auth & npm run lint-order & npm run lint-helloworld & npm run lint-shopper & npm run lint-vendor",
    "containerized": "npm run build && docker-compose up --build",
    "build": "npm run build-auth && npm run build-products && npm run build-orders && npm run build-helloworld",
    "build-auth": "cd AuthService && npm run build",
    "build-products": "cd ProductService && npm run build",
    "build-orders": "cd OrderService && npm run build",
    "build-helloworld": "cd HelloWorld && npm run build",
    "cis": "npm ci && npm run ci-auth && npm run ci-products && npm run ci-orders && npm run ci-helloworld",
    "ci-auth": "cd AuthService && npm ci",
    "ci-products": "cd ProductService && npm ci",
    "ci-orders": "cd OrderService && npm ci",
    "ci-helloworld": "cd HelloWorld && npm ci",
    "start": "concurrently --kill-others \"npm run start-auth\" \"npm run start-products\" \"npm run start-orders\" \"npm run start-helloworld\"",
    "start-auth": "cd AuthService && npm start",
    "start-products": "cd ProductService && npm start",
    "start-orders": "cd OrderService && npm start",
    "start-helloworld": "cd HelloWorld && npm start"
  },
  "devDependencies": {
    "concurrently": "*"
  },
  "dependencies": {
    "dotenv": "^16.4.5"
  }
}
